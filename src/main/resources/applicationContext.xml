<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
">
    <!--添加注解扫描,扫描指定的包,将包中的所有有注解的类实例化
    base-package 后面放要扫描的包
    如果有多个包需要扫描,可以使用逗号隔开  com.msb.bean,com.msb.service
    或者可以写上一层包路径  com.msb
    可以通过注解指定bean的id@Component("user1")
    如果不指定,则id默认是 类名首字母小写
    -->
    <context:component-scan base-package="com.demo.entity"></context:component-scan>
    <context:component-scan base-package="com.demo.dao"></context:component-scan>
    <context:component-scan base-package="com.demo.service"></context:component-scan>
    <!--spring 包扫描  -->
    <context:component-scan base-package="com.demo"/>
    <!--aop autoProxy 自动生成代理对象 -->
    <aop:aspectj-autoproxy/>

    <context:property-placeholder location="classpath:jdbc.properties"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="driverClassName" value="${jdbc.driver}"></property>
    </bean>

    <!--配置JDBCTemplate对象,并向里面注入DataSource-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <!--通过set方法注入连接池-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--
    use-default-filters="false"
    默认值为true 代表使用默认的扫描过滤器
    默认的扫描过滤器会识别并包含 @Component @Controller @Service @Repository 四个注解
    不使用默认的filter,使用我们自己的filter
    -->
    <!--控制只扫描Controller注解-->
<!--    <context:component-scan base-package="com.demo" use-default-filters="false">-->
<!--        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
<!--    </context:component-scan>-->
<!--    &lt;!&ndash;控制不扫描Controller注解&ndash;&gt;-->
<!--    <context:component-scan base-package="com.msb" use-default-filters="true">-->
<!--        <context:exclude-filter  type="annotation" expression="org.springframework.stereotype.Controller"/>-->
<!--    </context:component-scan>-->
</beans>
